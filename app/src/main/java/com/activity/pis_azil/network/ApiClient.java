package com.activity.pis_azil.network;import okhttp3.Call;import okhttp3.EventListener;import okhttp3.OkHttpClient;import okhttp3.logging.HttpLoggingInterceptor;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;import retrofit2.converter.scalars.ScalarsConverterFactory;import android.util.Log;import com.google.gson.Gson;import com.google.gson.GsonBuilder;import java.io.IOException;public class ApiClient {    public static final String BASE_URL = "http://193.198.57.183:7081/azil/";    private static Retrofit retrofit = null;    public static Retrofit getClient() {        if (retrofit == null) {            try {                OkHttpClient okHttpClient = UnsafeOkHttpClient.getUnsafeOkHttpClient();                Gson gson = new GsonBuilder()                        .setLenient() // Dodano setLenient()                        .create();                HttpLoggingInterceptor logging = new HttpLoggingInterceptor();                logging.setLevel(HttpLoggingInterceptor.Level.BODY);                OkHttpClient client = new OkHttpClient.Builder()                        .eventListener(new EventListener() {                            @Override                            public void callFailed(Call call, IOException ioe) {                                Log.e("NETWORK", "Network call failed", ioe);                            }                        })                        .addInterceptor(logging)                        .build();                retrofit = new Retrofit.Builder()                        .baseUrl(BASE_URL)                        .client(client) // Koristi OkHttp klijent s listenerom                        .addConverterFactory(ScalarsConverterFactory.create()) // Dodano ScalarsConverterFactory                        .addConverterFactory(GsonConverterFactory.create(gson)) // Koristi GSON s lenient postavkom                        .build();            } catch (Exception e) {                e.printStackTrace();            }        }        return retrofit;    }}